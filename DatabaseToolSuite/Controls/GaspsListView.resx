<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="organizationImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="organizationImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB6
        CQAAAk1TRnQBSQFMAgEBAwEAAZgBAAGYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwADIQEwA1QBrwNAAXADIQEwIAADDQESA0oBigMyAVEoAAMEAQYDUwGl
        AxwBJwwAA18B/wNfAf94AAI6ATkBYAFkAWIBWAHvAd8BzAGsAf8B1wG3AY4B/wHEAY4BPwH/AWMBYgFV
        Ae8CUQFQAZ8COgE5AWADFwEgEAADQAFvA1YB/wNVAfwDMQFOIAADBAEGA1cBtwNWAbQQAANfAf8DXwH/
        dAADOgFgAcsBnAFQAf8B2gHMAaYB/wHqAeMBzwH/AewB5gHUAf8B6QHiAcwB/wHGAZgBTwH/AcwBpQFf
        Af8BygGhAVkB/wG7AWwBKQH/AVwCVwHfAlEBUAGfCAADGAEhA2gB+QNWAf8DYgH2AyEBMBgAAwQBBgNW
        AbQDaAH5AxoBJBAAA18B/wNfAf9wAANMAY8B0QGqAWMB/wHfAdgBuAH/Ad0B1AGzAf8B7QHnAdYB/wHv
        AeoB2wH/AewB5gHUAf8BqAFBAQAB/wGuAUwBAAH/AboBYQEYAf8B0QGpAWIB/wHcAdABrAH/AbEBWAEO
        Af8MAANGAX4DVgH/A1YB/wNhAeQDFAEbEAADBAEGA1QBrgNWAf8DSAGEFAADXwH/A18B/3AAAdUBrgFo
        Af8B4gHeAcIB/wHgAdsBvQH/Ad4B1wG3Af8B8AHrAdwB/wHyAe4B4wH/Ae8B6gHbAf8BpwFAAQAB/wGt
        AUoBAAH/AbgBXQETAf8BywGaAU0B/wHfAdMBswH/AbcBZAEeAf8QAANTAaUDVgH/A1YB/wNdAdIDCwEP
        CAADBAEGA1QBrgNWAf8DXQHSAwQBBhQAA18B/wNfAf9wAAHbAcABlgH/AeMB4QHIAf8B4QHZAbgB/wHg
        AdEBqQH/AfIB7wHjAf8B9gHzAeoB/wHyAe4B4gH/AacBQAEAAf8BqwFIAQAB/wG2AVoBDgH/AcoBmAFK
        Af8B4gHXAboB/wG6AWkBJQH/EAADBAEGA1YBtANWAf8DVgH/A1sBxgMNARIDBAEGA1YBqwNWAf8DaAH5
        AyEBMBgAA18B/wNfAf8EAAJZAVsBwwMoATxkAAHdAcUBnAH/AdoB0wHCAf8BRgFBAegB/wIAAv8BnAGa
        AfMB/wH5AfcB8QH/AfUB8gHpAf8BpwFAAQAB/wGqAUYBAAH/AbQBVgEKAf8ByQGWAUgB/wHlAdsBwQH/
        Ab0BgAEsAf8UAAMCAQMDTAGTA1YB/wNWAf8DXgHYA1oBwANWAf8DVgH/AzsBYxwAA18B/wNfAf8EAAEf
        AUIB1gH/AR8BQgHWAf8CWAFaAcADJgE5XAABzAGxAaMB/wFaAVkB+wH/AjQC/wIVAv8CAAL/AZ0BnAH6
        Af8B+QH2AfAB/wG7AWgBKAH/AakBRAEAAf8BsgFTAQYB/wHLAZoBUAH/AegB3wHIAf8BhwFQAYoB/wFZ
        AlcBvxgAAzgBXQNfAfMDVgH/A1YB/wNWAf8DUQGcIAADXwH/A18B/wQAAR8BQgHWAf8BHwFCAdYB/wEf
        AUIB1gH/AR8BQgHWAf8BVQJXAboDJgE5UAADXAHPAp4C/wKAAv8CUAL/AjEC/wITAv8CBgL/AcwBywH4
        Af8B8wHsAeEB/wHBAYcBOQH/AcUBjwFCAf8B6gHhAc0B/wGwAasB3AH/AgAC/wFcAlkBzxgAAzEBTgNf
        AfMDVgH/A1YB/wNWAf8DMgFRIAADXwH/A18B/wQAAR8BQgHWAf8BHwFCAdYB/wEfAUIB1gH/AR8BQgHW
        Af8BHwFCAdYB/wEfAUIB1gH/AVUCVwG3AyQBNkgAAdUBuwGwAf8CugL/ApwC/wJrAv8CTQL/Ai8C/wIQ
        Av8CBQL/AcwBywH3Af8B+AH1Ae8B/wH0AfEB5wH/AcQBwAHlAf8CAAH9Af8BXAFZAVwBzwMMARAQAAMJ
        AQwDTgGZA1YB/wNWAf8DVgH/A1wBzANhAeEDVgH/A0oBigMEAQYYAANfAf8DXwH/BAABHwFCAdYB/wEf
        AUIB1gH/AR8BQgHWAf8BHwFCAdYB/wEfAUIB1gH/AR8BQgHWAf8BHwFCAdYB/wEfAUIB1gH/A0QBe0QA
        AyoBQAFlAWQBZQHvArgC/wKZAv8CaQL/AksC/wIsAv8CDgL/AgMC/wHMAcsB9wH/AckBxwHxAf8CAAH9
        Af8BXAFZAVwBzwMMARAQAAMuAUgDYQHhA1YB/wNWAf8DVgH/A1YBqwMHAQkDBwEJA0gBhANiAfYDXAHM
        AxgBIRQAA18B/wNfAf8EAAEfAUIB1gH/AR8BQgHWAf8BHwFCAdYB/wEfAUIB1gH/AR8BQgHWAf8BHwFC
        AdYB/wJYAVsBxgMpAT9MAAMhATABZQFkAWUB7wK1Av8ClwL/AmYC/wJIAv8CKgL/AgsC/wICAv8CAAH+
        Af8BXAFZAVwBzwMMARAQAANKAY0DVgH/A1YB/wNWAf8DVgH/A0kBhxAAAxYBHgNMAZMDXAHqA0MBeAME
        AQYMAANfAf8DXwH/BAABHwFCAdYB/wEfAUIB1gH/AR8BQgHWAf8BHwFCAdYB/wJZAVsBwwMpAT9YAAMh
        ATABZQFkAWUB7wKzAv8ClQL/AmQC/wJGAv8CJwL/ARMBEAHzAf8BXAFZAVwBzwMMARAQAAMCAQMDYgH2
        A1YB/wNWAf8DXgHVAysBQhwAAw0BEgM7AWMDHAEnDAADXwH/A18B/wQAAR8BQgHWAf8BHwFCAdYB/wJY
        AVoBwAMpAT9kAAMhATABZQFjAWQB7wKxAv8BoAGTAdkB/wNcAd8DUQGfAzoBYAMMARAYAAMxAU4DVwG3
        A0ABbwMEAQY4AANfAf8DXwH/BAACWAFaAcADKQE//wBhAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEB
        AQABAQUAAYAXAAP/AQAG/wIAAfAB/wEfAfgB5wH/AgAB4AIPAfEB5wH/AgABwAEDAQcB4QHnAf8CAAGA
        AQMBgwHDAecB/wIAAYABAwHBAYMB5wH/AgABgAEDAcABBwHkAf8CAAGAAQMB4AEPAeQBPwIAAYABAQH4
        AR8B5AEPAwABAQH4AR8B5AEDAwABAQHgAQcB5AEBAwABAwHAAQMB5AEDAgABgAEHAYEB4AHkAQ8CAAHA
        AQ8BAwH4AeQBPwIAAeABHwGHAf8B5AH/AgAG/wIACw==
</value>
  </data>
</root>